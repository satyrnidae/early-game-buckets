architectury {
    common rootProject.enabled_platforms.split(',')
}

sourceSets {
    main {
        resources.srcDir file("src/generated")
    }
}

loom {
    accessWidenerPath.set(file("src/main/resources/early_buckets.accesswidener"))
}

dependencies {
    // We depend on Fabric Loader here to use the Fabric @Environment annotations,
    // which get remapped to the correct annotations on each platform.
    // Do NOT use other classes from Fabric Loader.
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury:$rootProject.architectury_api_version"

    // compile against the JEI API but do not include it at runtime
    modCompileOnlyApi("mezz.jei:jei-${rootProject.minecraft_version}-fabric-api:${rootProject.jei_version}")
    // at runtime, use the full JEI jar for Fabric
    modRuntimeOnly("mezz.jei:jei-${rootProject.minecraft_version}-fabric:${rootProject.jei_version}")
}
